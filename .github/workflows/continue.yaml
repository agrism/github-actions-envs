name: Deployment
on: 
  push:   
    branches:
      - main
      - dev
env:
  MONGODB_DB_NAME: gha-demo
jobs:
  lint:
    environment: TEST
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: npm-deps-${{ hashFiles('**package-lock.json')}}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Do some dummy lint
        run: echo "do dome dymmy lint"
  test:
    environment: TEST
    env:
      MONGODB_CLUSTER_ADDRESS: cluster0.lxkah5y.mongodb.net
      MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
      PORT: 8080
    runs-on: ubuntu-latest
    steps: 
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: npm-deps-${{ hashFiles('**package-lock.json')}}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run server
        run: npm start & npx wait-on http://127.0.0.1:$PORT
      - name: Run tests
        continue-on-error: true
        id: run-tests
        run: npm test
      - name: Upload test report
        uses: actions/upload-artifact@v3
        with: 
          name: test-report
          path: test.json
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: ${{ env.MONGODB_USERNAME }}"
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: ${{ env.MONGODB_USERNAME }}"
          echo "MONGODB_DB_NAME: $MONGODB_DB_NAME"
  report:
    runs-on: ubuntu-latest
    needs: [lint, deploy]
    if: failure()
    steps:
      - name: Output information
        run: |
          echo "Something went wrong"
          echo "${{ toJSON(github) }}"
