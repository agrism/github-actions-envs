name: Using reusable workflow
on: 
  push:   
    branches:
      - main
      - dev
env:
  MONGODB_DB_NAME: gha-demo
jobs:
  lint:
    environment: TEST
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: npm-deps-${{ hashFiles('**composer.lock')}}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: composer install
      - name: Do some dummy lint
        run: echo "do dome dummy lint"
  test:
    environment: TEST
    env:
      MONGODB_CLUSTER_ADDRESS: cluster0.lxkah5y.mongodb.net
      MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
      PORT: 8080
    runs-on: ubuntu-latest
    steps: 
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: npm-deps-${{ hashFiles('**composer.lock')}}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: composer install
      - name: Run server
        run: echo "run server"
      - name: Run tests
        id: run-tests
        run: ./vendor/bin/phpunit
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: ${{ env.MONGODB_USERNAME }}"
  build:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: npm-deps-${{ hashFiles('**composer.lock')}}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: composer install
      - name: Copy files to artifact destination
        run: |
          cp -r ./src ./dist
          cp -r ./vendor ./dist
          cp -r ./index.php ./dist
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    uses: ./.github/workflows/reusable.yaml
    with:
      artifact-name: dist-files
    #secrets:
      #ome-secrets: ${{ secrets.some-secret }}
  print-deploy-report:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Print deploy output
        run: echo "${{ needs.deploy.outputs.result }}"
  report:
    runs-on: ubuntu-latest
    needs: [lint, deploy]
    if: failure()
    steps:
      - name: Output information
        run: |
          echo "Something went wrong"
          echo "${{ toJSON(github) }}"
